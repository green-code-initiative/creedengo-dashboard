name: Build and Tests

on:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - '.github/**/*.yml'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    permissions:
      pull-requests: read # allows SonarCloud to decorate PRs with analysis results

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js defined in .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Test with coverage
        run: pnpm coverage

      - name: Build
        run: pnpm build
        env:
          NODE_ENV: development
          
      - name: Get Installed Playwright version
        id: playwright-version
        run: echo "::set-output name=version::$(echo "$(pnpm why @playwright/test)" | grep playwright | cut -d " " -f 2)"

      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: '~/.cache/ms-playwright'
          key: '${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}'
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps --only-shell

      - name: E2E Tests
        run: pnpm test:e2e

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
